steps:
  - name: gcr.io/$PROJECT_ID/testrunner
    args:
      - '-c'
      - |
        set -e
        gcloud --version
        make --version
        pip --version
        python --version
        pytest --version
        poetry --version

        poetry install
        poetry run pytest --ignore=cicd --cov=. --cov-report=term-missing --cov-fail-under=80 --cov-config=.coveragerc | tee coverage-report.txt
        if grep -q "FAIL Required test coverage" coverage-report.txt; then
          echo "ERROR: Target coverage was not reached, stopping pipeline."
          exit 1
        fi

        mkdir data
        gsutil cp $_SIC_LOOKUP_CSV data/
        gsutil cp $_SIC_REPHRASE_CSV data/
        ls data

        docker build -t $_GAR_IMAGE:$SHORT_SHA -t $_GAR_IMAGE:latest .

        docker push $_GAR_IMAGE:latest
        docker push $_GAR_IMAGE:$SHORT_SHA

        gcloud run deploy survey-assist-api --image=$_GAR_IMAGE:$SHORT_SHA --region $LOCATION --project $_TARGET_PROJECT_ID
        
        export SURVEY_ASSIST_API_URL="https://survey-assist-api-$_TARGET_PROJECT_NUMBER.$LOCATION.run.app/$_API_VERSION/survey-assist"
        export SA_ID_TOKEN=$(gcloud auth print-identity-token --impersonate-service-account=$_API_SA)

        pytest cicd
    id: Run tests, build, tag, deploy survey assist API and run survey assist API smoke tests
    entrypoint: bash
timeout: 900s
options:
  logging: CLOUD_LOGGING_ONLY
